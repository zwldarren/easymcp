"""Initial migration

Revision ID: 1701a6cbb100
Revises:
Create Date: 2025-10-11 14:43:38.833937
"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "1701a6cbb100"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "global_configs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("stateless", sa.Boolean(), nullable=True),
        sa.Column("log_level", sa.String(), nullable=True),
        sa.Column("pass_environment", sa.Boolean(), nullable=True),
        sa.Column("auth", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_global_configs_id"), "global_configs", ["id"], unique=False)

    op.create_table(
        "server_configs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=True),
        sa.Column("timeout", sa.Integer(), nullable=True),
        sa.Column("transport_type", sa.String(), nullable=False),
        sa.Column("transport_config", sa.JSON(), nullable=True),
        sa.Column("auth_config", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_server_configs_id"), "server_configs", ["id"], unique=False)
    op.create_index(op.f("ix_server_configs_name"), "server_configs", ["name"], unique=True)
    op.create_index("idx_server_configs_name", "server_configs", ["name"], unique=False)
    op.create_index(
        "idx_server_configs_transport_type", "server_configs", ["transport_type"], unique=False
    )

    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)

    op.create_table(
        "api_keys",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("key_hash", sa.String(length=255), nullable=False),
        sa.Column("key_prefix", sa.String(length=8), nullable=False),
        sa.Column("scopes", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("last_used", sa.DateTime(), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_api_keys_id"), "api_keys", ["id"], unique=False)
    op.create_index(op.f("ix_api_keys_key_prefix"), "api_keys", ["key_prefix"], unique=False)
    op.create_index("idx_api_keys_key_prefix", "api_keys", ["key_prefix"], unique=False)

    op.create_table(
        "sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("session_token", sa.String(length=255), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("last_accessed_at", sa.DateTime(), nullable=True),
        sa.Column("user_agent", sa.String(), nullable=True),
        sa.Column("ip_address", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_sessions_id"), "sessions", ["id"], unique=False)
    op.create_index(op.f("ix_sessions_session_token"), "sessions", ["session_token"], unique=True)
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_sessions_session_token"), table_name="sessions")
    op.drop_index(op.f("ix_sessions_id"), table_name="sessions")
    op.drop_table("sessions")
    op.drop_index("idx_api_keys_key_prefix", table_name="api_keys")
    op.drop_index(op.f("ix_api_keys_key_prefix"), table_name="api_keys")
    op.drop_index(op.f("ix_api_keys_id"), table_name="api_keys")
    op.drop_table("api_keys")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index("idx_server_configs_transport_type", table_name="server_configs")
    op.drop_index("idx_server_configs_name", table_name="server_configs")
    op.drop_index(op.f("ix_server_configs_name"), table_name="server_configs")
    op.drop_index(op.f("ix_server_configs_id"), table_name="server_configs")
    op.drop_table("server_configs")
    op.drop_index(op.f("ix_global_configs_id"), table_name="global_configs")
    op.drop_table("global_configs")
    # ### end Alembic commands ###
